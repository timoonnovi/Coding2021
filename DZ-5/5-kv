1) Resource Acquisition Is Initialization. Это программная идиома, смысл которой заключается в том, что с помощью тех или иных программных механизмов 
   получение некоторого ресурса неразрывно совмещается с инициализацией, а освобождение — с уничтожением объекта.
2) Конструктор – функция для инициализации членов класса. Деструктор – функция для освобождения ресурсов при уничтожении объекта класса.
   Копирующий конструктор – который создаёт новый объект класса, идентичный переданному. Геттер – функцция-член, возвращающая значение поля класса. Сеттер – изменяющая.
   Чтобы определить конструктор и деструктор по умолчанию, нужно оставить пустым их тело при определении.
3) Инкапсуляция улучшает читаемость кода, повышает защиту от непреднамеренного изменения и т.д.
4) Проекты делают многофайловыми для удобства. Разделение кода на .h и .cpp файлы сделано для облегчения кода (дабы не вставлять в main.cpp реализации функций и т.д.).
5) main.cpp -> Препроцессинг (макроподстановки) -> main.cpp' -> Компиляция (превращения кода С++ в машинный код процессора) -> main.o -> Линкинг (сборка) -> main.exe.  
